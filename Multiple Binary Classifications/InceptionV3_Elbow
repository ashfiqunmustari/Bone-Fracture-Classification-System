{"cells":[{"cell_type":"markdown","metadata":{"id":"gibuQXZYajIi"},"source":["## **`Necessary installation`**"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":17498,"status":"ok","timestamp":1677022260824,"user":{"displayName":"Neloy.","userId":"12580598278832678789"},"user_tz":-360},"id":"frWuFzCx3TB5","outputId":"a87e3d14-961a-4233-d734-bb0c18b2f897"},"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting tensorflow-io\n","  Downloading tensorflow_io-0.30.0-cp38-cp38-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (26.9 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m26.9/26.9 MB\u001b[0m \u001b[31m32.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: tensorflow-io-gcs-filesystem==0.30.0 in /usr/local/lib/python3.8/dist-packages (from tensorflow-io) (0.30.0)\n","Installing collected packages: tensorflow-io\n","Successfully installed tensorflow-io-0.30.0\n","Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting tensorflow_addons\n","  Downloading tensorflow_addons-0.19.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.1 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.1/1.1 MB\u001b[0m \u001b[31m14.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: typeguard>=2.7 in /usr/local/lib/python3.8/dist-packages (from tensorflow_addons) (2.7.1)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.8/dist-packages (from tensorflow_addons) (23.0)\n","Installing collected packages: tensorflow_addons\n","Successfully installed tensorflow_addons-0.19.0\n"]}],"source":["!pip install tensorflow-io\n","!pip install tensorflow_addons"]},{"cell_type":"markdown","metadata":{"id":"IpQgSrxTitFp"},"source":["## **`Necessary imports`**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Isox4-IYaiby"},"outputs":[],"source":["import tensorflow as tf\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","\n","import tensorflow_addons as tfa\n","import tensorflow_io as tfio\n","from tensorflow.keras.layers import *\n","from tensorflow.keras.models import *\n","from tensorflow import keras\n","\n","from tqdm import tqdm\n","import datetime\n","import os\n","\n","# Random seed fixation\n","tf.random.set_seed(666)\n","np.random.seed(666)"]},{"cell_type":"markdown","metadata":{"id":"_diHu_qZiw7J"},"source":["## **`Cheking tensorflow version`**"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1677022264593,"user":{"displayName":"Neloy.","userId":"12580598278832678789"},"user_tz":-360},"id":"ElWLoH5mYzqV","outputId":"4617d30f-2f42-47f8-b59a-9fcb19b2ea7f"},"outputs":[{"output_type":"stream","name":"stdout","text":["Tensorflow version: 2.11.0\n"]}],"source":["print(f\"Tensorflow version: {tf.__version__}\")"]},{"cell_type":"markdown","metadata":{"id":"UeqdjkwWZjIC"},"source":["## **`Cheking GPU avaibility`**"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1677022264594,"user":{"displayName":"Neloy.","userId":"12580598278832678789"},"user_tz":-360},"id":"L9xsfKJ3ZiUr","outputId":"7af1bb9b-6dd2-4dbb-d55d-ee31952970fa"},"outputs":[{"output_type":"stream","name":"stdout","text":["GPU AVAILABLE\n"]}],"source":["print(\"GPU AVAILABLE\" if tf.config.list_physical_devices(\"GPU\") else \"No GPU\")"]},{"cell_type":"markdown","metadata":{"id":"IVcJ-olxbYaj"},"source":["## **`Mounting Drive`**"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":30249,"status":"ok","timestamp":1677022294838,"user":{"displayName":"Neloy.","userId":"12580598278832678789"},"user_tz":-360},"id":"0YKXux_la6mk","outputId":"f930e49c-124d-4045-938e-b6d494cb919c"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /gdrive\n"]}],"source":["from google.colab import drive\n","drive.mount('/gdrive')"]},{"cell_type":"markdown","metadata":{"id":"7DOjtnTlgqqK"},"source":["## **`Data augmentation`**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PcT_Z3lkgg4a"},"outputs":[],"source":["# function\n","import  cv2\n","import imgaug\n","import imageio\n","import os\n","import numpy as np\n","from imgaug import augmenters as iaa\n","\n","class DataAugmentation:\n","\tdef __init__(self, root_dir=\"\",output_dir=\"\"):\n","\t\tself.root_dir = root_dir\n","\t\tself.output_dir = output_dir\n","\t\tprint(\"Instance of the DataAugmentation class created\")\n","\n","\tdef augmentation_of_image(self, test_image, output_path):\n","\t\tself.test_image = test_image;\n","\t\tself.output_path = output_path;\n","\t\t#define the Augmenters\n","\n","\t\t#properties: A range of values signifies that one of these numbers is randmoly chosen for every augmentation for every batch\n","\n","\t\t# Apply affine transformations to each image.\n","\t\trotate = iaa.Affine(rotate=(-90,90));  \n","\t\tscale = iaa.Affine(scale={\"x\": (0.5, 0.9), \"y\": (0.5,0.9)}); \n","\t\ttranslation = iaa.Affine(translate_percent={\"x\": (-0.15, 0.15), \"y\": (-0.15, 0.15)});\n","\t\tshear = iaa.Affine(shear=(-2, 2)); #plagio parallhlogrammo wihthin a range (-8,8)\n","\t\tzoom = iaa.PerspectiveTransform(scale=(0.01, 0.15), keep_size=True) # do not change the output size of the image\n","\t\th_flip = iaa.Fliplr(1.0); # flip horizontally all images (100%)\n","\t\tv_flip = iaa.Flipud(1.0); #flip vertically all images\n","\t\tpadding=iaa.KeepSizeByResize(iaa.CropAndPad(percent=(0.05, 0.25)))#positive values correspond to padding 5%-25% of the image,but keeping the origial output size of the new image\n","\n","\n","\t\t#More augmentations\n","\t\tblur = iaa.GaussianBlur(sigma=(0, 1.22)) # blur images with a sigma 0-2,a number ofthis range is randomly chosen everytime.Low values suggested for this application\n","\t\tcontrast = iaa.contrast.LinearContrast((0.75, 1.5)); #change the contrast by a factor of 0.75 and 1.5 sampled randomly per image\n","\t\tcontrast_channels = iaa.LinearContrast((0.75, 1.5), per_channel=True) #and for 50% of all images also independently per channel:\n","\t\tsharpen = iaa.Sharpen(alpha=(0, 1.0), lightness=(0.75, 1.5)); #sharpen with an alpha from 0(no sharpening) - 1(full sharpening) and change the lightness form 0.75 to 1.5 \n","\t\tgauss_noise = iaa.AdditiveGaussianNoise(scale=0.111*255, per_channel=True) #some random gaussian noise might occur in cell images,especially when image quality is poor\n","\t\tlaplace_noise = iaa.AdditiveLaplaceNoise(scale=(0, 0.111*255)) #we choose to be in a small range, as it is logical for training the cell images\n","\n","\n","\t\t#Brightness \n","\t\tbrightness = iaa.Multiply((0.35,1.65)) #change brightness between 35% or 165% of the original image\n","\t\tbrightness_channels = iaa.Multiply((0.5, 1.5), per_channel=0.75) # change birghtness for 25% of images.For the remaining 75%, change it, but also channel-wise.\n","\n","\t\t#CHANNELS (RGB)=(Red,Green,Blue)\n","\t\tred =iaa.WithChannels(0, iaa.Add((10, 100))) #increase each Red-pixels value within the range 10-100\n","\t\tred_rot = iaa.WithChannels(0,iaa.Affine(rotate=(0, 45))) #rotate each image's red channel by 0-45 degrees\n","\t\tgreen= iaa.WithChannels(1, iaa.Add((10, 100)))#increase each Green-pixels value within the range 10-100\n","\t\tgreen_rot=iaa.WithChannels(1,iaa.Affine(rotate=(0, 45))) #rotate each image's green channel by 0-45 degrees\n","\t\tblue=iaa.WithChannels(2, iaa.Add((10, 100)))#increase each Blue-pixels value within the range 10-100\n","\t\tblue_rot=iaa.WithChannels(2,iaa.Affine(rotate=(0, 45))) #rotate each image's blue channel by 0-45 degrees\n","\n","\t\t#colors\n","\t\tchannel_shuffle =iaa.ChannelShuffle(1.0); #shuffle all images of the batch\n","\t\tgrayscale = iaa.Grayscale(1.0)\n","\t\thue_n_saturation = iaa.MultiplyHueAndSaturation((0.5, 1.5), per_channel=True) #change hue and saturation with this range of values for different values \n","\t\tadd_hue_saturation = iaa.AddToHueAndSaturation((-50, 50), per_channel=True) #add more hue and saturation to its pixels\n","\t\t#Quantize colors using k-Means clustering\n","\t\tkmeans_color = iaa.KMeansColorQuantization(n_colors=(4, 16)) #quantizes to k means 4 to 16 colors (randomly chosen). Quantizes colors up to 16 colors\n","\n","\t\t#Alpha Blending \n","\t\tblend =iaa.AlphaElementwise((0, 1.0), iaa.Grayscale((0,1.0))) ; #blend depending on which value is greater\n","\n","\t\t#Contrast augmentors\n","\t\tclahe = iaa.CLAHE(tile_grid_size_px=((3, 21),[0,2,3,4,5,6,7])) #create a clahe contrast augmentor H=(3,21) and W=(0,7)\n","\t\thistogram = iaa.HistogramEqualization() #performs histogram equalization\n","\n","\t\t#Augmentation list of metadata augmentors\n","\t\tOneofRed = iaa.OneOf( [red]);\n","\t\tOneofGreen = iaa.OneOf( [green] );\n","\t\tOneofBlue = iaa.OneOf( [blue]);\n","\t\tcontrast_n_shit = iaa.OneOf([contrast, brightness, brightness_channels]);\n","\t\tSomeAug = iaa.SomeOf(2,[rotate,scale, translation, shear, h_flip,v_flip],random_order=True);\n","\t\tSomeClahe = iaa.SomeOf(2, [clahe, iaa.CLAHE(clip_limit=(1, 10)),iaa.CLAHE(tile_grid_size_px=(3, 21)),iaa.GammaContrast((0.5, 2.0)), iaa.AllChannelsCLAHE() , iaa.AllChannelsCLAHE(clip_limit=(1, 10), per_channel=True)],random_order=True) #Random selection from clahe augmentors\n","\t\tedgedetection= iaa.OneOf([iaa.EdgeDetect(alpha=(0, 0.7)),iaa.DirectedEdgeDetect(alpha=(0, 0.7), direction=(0.0, 1.0))]);# Search in some images either for all edges or for directed edges.These edges are then marked in a black and white image and overlayed with the original image using an alpha of 0 to 0.7.\n","\t\tcanny_filter = iaa.OneOf([iaa.Canny(), iaa.Canny(alpha=(0.5, 1.0), sobel_kernel_size=[3, 7])]); #choose one of the 2 canny filter options\n","\t\tOneofNoise = iaa.OneOf([blur, gauss_noise, laplace_noise])\n","\t\tColor_1 = iaa.OneOf([channel_shuffle,grayscale, hue_n_saturation , add_hue_saturation, kmeans_color]);\n","\t\tColor_2 = iaa.OneOf([channel_shuffle,grayscale, hue_n_saturation , add_hue_saturation, kmeans_color]);\n","\t\tFlip = iaa.OneOf([histogram , v_flip, h_flip]);\n","\n","\t\t#Define the augmentors used in the DA\n","\t\tAugmentors= [SomeAug, SomeClahe, edgedetection, canny_filter, Color_1, contrast_n_shit]\n","\n","\n","\t\tfor i in range(0,6):\n","\t\t\timg = cv2.imread(test_image) #read you image\n","\t\t\timages = np.array([img for _ in range(6)], dtype=np.uint8)  # 12 is the size of the array that will hold 8 different images\n","\t\t\timages_aug = Augmentors[i].augment_images(images)  #alternate between the different augmentors for a test image\n","\t\t\tcv2.imwrite(os.path.join(output_path,test_image +\"new\"+str(i)+'.png'), images_aug[i])  #write all changed images\n","\t\t\t"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PBmTgQGDg1f6"},"outputs":[],"source":["import shutil\n","class DataAugmentation_Extension:\n","    def __init__(self, directory=\"\"):\n","      self.directory = directory\n","      print(\"Instance of DataAugmentation_Extension class created\")\n","    def printnow(self, dir):\n","      pass\n","      # print(\"Just testing that the method calling is working \"+ dir)\n","    \n","    def extend_dataset(self, directory):\n","      # print(\"HEY\")\n","      library_augment= DataAugmentation();\n","      self.directory = directory \n","\n","      if not os.path.exists(self.directory):\n","        print(\"ERROR! Couldn't find directory!\")\n","      else:\n","        print(\"Directory exists\")\n","      class_path = directory\n","      class_files = [class_path+name for name in os.listdir(class_path)]\n","      # print(class_files) #call augmentation for all class_files\n","      for i in range(len(class_files)):\n","        library_augment.augmentation_of_image(class_files[i], class_path)\n","        "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"M2983J9_g8Yp"},"outputs":[],"source":["def augment_data(Bone, Type):\n","  Sets = [\"Train\", \"Valid\"]\n","  for Set in Sets: \n","    target_directory = \"/gdrive/MyDrive/BoneFractureWork/OurDataset/\"+Bone+\"/\"+Type+\"/\"+Set+\"/\"\n","    #create an instance of the class\n","    datasetda = DataAugmentation_Extension()\n","    datasetda.extend_dataset(target_directory)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":857,"status":"ok","timestamp":1677022854392,"user":{"displayName":"Neloy.","userId":"12580598278832678789"},"user_tz":-360},"id":"atUnw1voyO3I","outputId":"56f28abb-0abe-4318-80f5-5a2d1f536229"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["1645"]},"metadata":{},"execution_count":13}],"source":["len(os.listdir(\"/gdrive/MyDrive/BoneFractureWork/OurDataset/Elbow/Positive/Train/\")),\n","len(os.listdir(\"/gdrive/MyDrive/BoneFractureWork/OurDataset/Elbow/Positive/Valid/\")), \n","len(os.listdir(\"/gdrive/MyDrive/BoneFractureWork/OurDataset/Elbow/Negative/Train\")), \n","len(os.listdir(\"/gdrive/MyDrive/BoneFractureWork/OurDataset/Elbow/Negative/Valid/\")) "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"d8rWtm94h41i"},"outputs":[],"source":["def different(bone, which_set):\n","\n","  P = list()\n","  N = list()\n","  Pos_dir = \"/gdrive/MyDrive/BoneFractureWork/OurDataset/\"+bone+\"/Positive/\"+which_set+\"/\"\n","  Neg_dir = \"/gdrive/MyDrive/BoneFractureWork/OurDataset/\"+bone+\"/Negative/\"+which_set+\"/\"\n","\n","  P.extend([Pos_dir+path, \"Fractured \"+bone] for path in os.listdir(Pos_dir))\n","  N.extend([Neg_dir+path, \"Non-fractured \"+bone] for path in os.listdir(Neg_dir))\n","  \n","  return P,N"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"C8uxOPH7h5mx"},"outputs":[],"source":["def Set_creation(which_set):  \n","\n","  print(f\"{which_set}:----\")\n","  Elbow_P, Elbow_N = different(\"Elbow\", which_set)\n","\n","  IMAGES_AND_LABELS = []\n","\n","  IMAGES_AND_LABELS.extend(batch for batch in Elbow_P)\n","  IMAGES_AND_LABELS.extend(batch for batch in Elbow_N)\n","\n","  return IMAGES_AND_LABELS"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":608,"status":"ok","timestamp":1677022859019,"user":{"displayName":"Neloy.","userId":"12580598278832678789"},"user_tz":-360},"id":"pxadKPmsiPhh","outputId":"34f8e86c-7f98-4f18-9ae2-62d5fe1a1303"},"outputs":[{"output_type":"stream","name":"stdout","text":["Train:----\n","Valid:----\n"]}],"source":["TRAIN_IMAGES_AND_LABELS = Set_creation(\"Train\")\n","VALID_IMAGES_AND_LABELS = Set_creation(\"Valid\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BnPRQJPLiSIp"},"outputs":[],"source":["IMAGES_AND_LABELS = TRAIN_IMAGES_AND_LABELS + VALID_IMAGES_AND_LABELS"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"iqtl4QRzUhaL"},"outputs":[],"source":["IMAGES = []\n","LABELS = []\n","\n","for i in range(len(IMAGES_AND_LABELS)):\n","  IMAGES.append(IMAGES_AND_LABELS[i][0])\n","  LABELS.append(IMAGES_AND_LABELS[i][1])\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"UCxR33veC1RK"},"outputs":[],"source":["from sklearn import preprocessing\n","\n","La_encoder = preprocessing.LabelEncoder()\n","\n","La_encoder.fit(LABELS)\n","OHC_LABELS = La_encoder.transform(LABELS)\n","OHC_LABELS = np.reshape(OHC_LABELS, (OHC_LABELS.size, 1))\n"]},{"cell_type":"markdown","metadata":{"id":"Kjvpt0J0o5GK"},"source":["## **`Preparing the data`**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"JWzESTHc6rag"},"outputs":[],"source":["BOOL_LABELS = []\n","for i in range(len(LABELS)):\n","  BOOL_LABELS.append(La_encoder.classes_ == np.array(LABELS[i]))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"A2pMIq6M650_"},"outputs":[],"source":["from sklearn.model_selection import train_test_split\n","\n","X_train, X_val_test, Y_train, Y_val_test = train_test_split(IMAGES, BOOL_LABELS, train_size=0.9, shuffle=True, stratify = BOOL_LABELS, random_state = 53)\n","\n","X_val, X_test, Y_val, Y_test = train_test_split(X_val_test, Y_val_test, test_size=0.7, shuffle=True, stratify = Y_val_test, random_state = 53)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1677022904630,"user":{"displayName":"Neloy.","userId":"12580598278832678789"},"user_tz":-360},"id":"e1u-Y4p861gY","outputId":"8e297fb3-bd9a-431c-b3df-7b94803de38b"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(43864, 1462, 3412)"]},"metadata":{},"execution_count":23}],"source":["len(X_train), len(X_val), len(X_test)"]},{"cell_type":"markdown","metadata":{"id":"_YLPKV9y61nQ"},"source":["## **`Necessary initializations`**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_AfOxZZCYtg6"},"outputs":[],"source":["IMG_SIZE = 300\n","\n","NUMBER_OF_CHANNELS = 3\n","\n","INPUT_SHAPE = [IMG_SIZE, IMG_SIZE, 3]\n","\n","OUTPUT_SHAPE = len(La_encoder.classes_)\n","\n","LR = 0.0001\n","\n","BATCH_SIZE = 64\n","\n","Unique_labels = La_encoder.classes_\n","\n","EPOCHS = 10"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Ei9_VgJAnc9h"},"outputs":[],"source":["def preprocess_image(filepath):\n","  \n","  image = tf.io.read_file(filepath)\n","  image = tf.io.decode_png(image, channels=3)\n","  image = tf.image.convert_image_dtype(image, tf.float32)\n","  image = tf.image.resize(image, [IMG_SIZE, IMG_SIZE])\n","\n","  return image"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ShZ-XK2SV4Fl"},"outputs":[],"source":["def get_image_and_label(X, Y):\n","  \n","  image = preprocess_image(X)\n","  label = Y\n","\n","  return image, label"]},{"cell_type":"markdown","metadata":{"id":"kxVWDaaMY0xx"},"source":["## **`Creation of databatches`**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"1AP1FZ9MT44Y"},"outputs":[],"source":["def create_databatches(X, Y=None, test_data = False, cross_train = False,val_data = False, batch_size=BATCH_SIZE):\n","\n","  if test_data:\n","    print(\"Creation of test databatches..\")\n","    data = tf.data.Dataset.from_tensor_slices((tf.constant(X)))\n","    data_batch = data.map(preprocess_image).batch(batch_size)\n","  \n","  elif val_data or cross_train:\n","    if val_data: \n","      print(\"Creation of valid databatches..\")\n","    else:\n","      print(\"Creation of cross entropy databatches..\")\n","    data = tf.data.Dataset.from_tensor_slices((tf.constant(X), tf.constant(Y)))\n","    data = data.shuffle(buffer_size = len(X))\n","    data_batch = data.map(get_image_and_label).batch(batch_size)\n","  \n","  else:\n","    print(\"Creation of train databatches..\")\n","    data = tf.data.Dataset.from_tensor_slices((tf.constant(X), tf.constant(Y)))\n","    data = data.shuffle(buffer_size = len(X))\n","    data_batch = data.map(get_image_and_label).batch(batch_size)\n","  \n","  return data_batch\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4148,"status":"ok","timestamp":1677022924425,"user":{"displayName":"Neloy.","userId":"12580598278832678789"},"user_tz":-360},"id":"X3p5uRC-VQi1","outputId":"b7385acf-014d-4a47-a683-9fc4d0f3bc43"},"outputs":[{"output_type":"stream","name":"stdout","text":["Creation of train databatches..\n","Creation of valid databatches..\n","Creation of test databatches..\n"]}],"source":["train_ds = create_databatches(X_train, Y_train)\n","val_ds = create_databatches(X_val, Y_val, val_data = True)\n","test_ds = create_databatches(X_test, Y_test, test_data = True)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6,"status":"ok","timestamp":1677022924426,"user":{"displayName":"Neloy.","userId":"12580598278832678789"},"user_tz":-360},"id":"IXRTTxrwV7Td","outputId":"85f0232b-b6b1-445d-83b8-3e9e58fe51d7"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["((TensorSpec(shape=(None, 300, 300, 3), dtype=tf.float32, name=None),\n","  TensorSpec(shape=(None, 2), dtype=tf.bool, name=None)),\n"," TensorSpec(shape=(None, 300, 300, 3), dtype=tf.float32, name=None))"]},"metadata":{},"execution_count":29}],"source":["train_ds.element_spec, test_ds.element_spec"]},{"cell_type":"markdown","metadata":{"id":"Nox_4RwJxGm_"},"source":["## **`Save model`**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"v3urPwwvxGHJ"},"outputs":[],"source":["def save_model(model, suffix = None):\n","\n","  model_path = os.path.join(\"/gdrive/MyDrive/BoneFractureWork/Saved_models/New/Models/\"+suffix, datetime.datetime.now().strftime(\"%Y_%m_%d-%H_%M_%S\"))\n","  model_dir = model_path + \".h5\"\n","\n","  model.save(filepath = model_dir)\n","\n","  return model_dir\n"]},{"cell_type":"markdown","metadata":{"id":"BOaQs2ICxvez"},"source":["## **`Load Model`**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"fFc9ZlG0xusj"},"outputs":[],"source":["def load_model(FilePath):\n","  \n","  model = tf.keras.models.load_model(\n","      filepath = FilePath\n","  )\n","  \n","  return model"]},{"cell_type":"markdown","metadata":{"id":"DoPFUl3Gx20y"},"source":["## **`Confusion Matrix`**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_jR9n8NSx16C"},"outputs":[],"source":["from sklearn.metrics import confusion_matrix\n","import seaborn as sns\n","\n","def Confusion_matrix(Y_true, Y_pred, Labels, suffix):\n","\n","  c_m = confusion_matrix(Y_true, Y_pred)\n","\n","  Cm_Df = pd.DataFrame(c_m, index = Labels, columns = Labels)\n","\n","  # fig, ax = plt.subplots(figsize = (5,5))\n","\n","  # ax = sns.heatmap(\n","  #     Cm_Df,\n","  #     cbar = False,\n","  #     cmap = \"gnuplot\",\n","  #     annot = True,\n","  #     linewidth = 3,\n","  #     annot_kws = {\n","  #         'fontsize' : 20\n","  #     }\n","  # )\n","\n","  # # plt.suptitle(f\"Confusion matrix for {suffix}\", fontsize=20)\n","  # plt.suptitle(f\"{suffix}\", fontsize=15, color = 'purple',fontweight=\"bold\")\n","  # plt.xlabel(\"Actual Values\", fontsize=15)\n","  # plt.ylabel(\"Predicted Values\", fontsize=15)\n","  print(f\"{Cm_Df}\")\n","  # plt.show()\n"]},{"cell_type":"markdown","metadata":{"id":"GMTdpjUcx856"},"source":["## **`Accuracy`**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2XIVCyBPx8pa"},"outputs":[],"source":["from sklearn.metrics import accuracy_score\n","\n","def model_accuracy(Y_true, Y_pred, suffix):\n","\n","  Accuracy = accuracy_score(Y_true, Y_pred) * 100\n","  print(f\"\\n{suffix} Model's Accuracy: {Accuracy:.2f}%\\n\")\n","  "]},{"cell_type":"markdown","metadata":{"id":"x0A1x8wUyFAr"},"source":["## **`Classification report`**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4Uew_90oyEhL"},"outputs":[],"source":["from sklearn.metrics import classification_report\n","\n","def model_classification_report(Y_true, Y_pred, suffix):\n","\n","  c_r = classification_report(Y_true, Y_pred)\n","  # CR_DF = pd.DataFrame(c_r).transpose()\n","  \n","  print(f\"\\n{suffix}'s Model's classification report: \\n\")\n","  print(f\"{c_r}\")\n"]},{"cell_type":"markdown","metadata":{"id":"o4-g_wmmyKjz"},"source":["## **`Evaluate the model`**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"UY4Hik1HyKDU"},"outputs":[],"source":["def Model_Evaluation(Y_true, Y_pred, Labels, suffix):\n","\n","  model_accuracy(Y_true, Y_pred, suffix)\n","\n","  Confusion_matrix(Y_true, Y_pred, Labels, suffix)\n","\n","  model_classification_report(Y_true, Y_pred, suffix)\n"]},{"cell_type":"markdown","metadata":{"id":"uBJz1QOLdpFS"},"source":["## **`Callbacks`**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Lc66uoQg3VzS"},"outputs":[],"source":["# Callbacks\n","\n","import datetime\n","%load_ext tensorboard\n","\n","def Callbacks(suffix):\n","\n","  logdir = os.path.join(\"/gdrive/MyDrive/BoneFractureWork/Saved_models/New/Tensorboard_logs/\"+suffix, datetime.datetime.now().strftime(\"%Y_%m_%d-%H_%M_%S\"))\n","\n","  tensorboard_callback = tf.keras.callbacks.TensorBoard(logdir) \n","\n","  earlystopping_callback = tf.keras.callbacks.EarlyStopping( monitor = \"val_loss\", patience = 3, verbose = 1, mode = \"min\")\n","\n","  reducelroplateau_callback = tf.keras.callbacks.ReduceLROnPlateau( monitr = \"val_loss\", factor = 0.2, patience = 8, min_lr = 1e-5)\n","\n","  checkpoint_dir = os.path.join(\"/gdrive/MyDrive/BoneFractureWork/Saved_models/New/Checkpoints/\"+suffix, datetime.datetime.now().strftime(\"%Y_%m_%d-%H_%M_%S\"))\n","  \n","  File_path = checkpoint_dir+\".hdf5\"\n","\n","  modelcheckpoint_callback = tf.keras.callbacks.ModelCheckpoint( filepath = File_path, monitor = \"val_accuracy\", mode = \"max\", verbose = 1, save_best_only = True)\n","\n","  Callbacks = [earlystopping_callback, tensorboard_callback, reducelroplateau_callback, modelcheckpoint_callback]\n","\n","  # Callbacks = [ tensorboard_callback, reducelroplateau_callback ]\n","\n","  # Callbacks = [tensorboard_callback]\n","\n","  return Callbacks\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"g-9MTP5le9_x"},"outputs":[],"source":["def model_compile(model, input_shape):\n","    \n","    model.compile(\n","      optimizer = tf.keras.optimizers.Adam(learning_rate = 1e-4),\n","      loss = tf.keras.losses.BinaryCrossentropy(),\n","      metrics = [\"accuracy\"]\n","    )\n","\n","    model.build(input_shape)\n","\n","    return model"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"db20ffqLezF1"},"outputs":[],"source":["def preprocess_layers(x, output_shape = OUTPUT_SHAPE):\n","\n","  x = tf.keras.layers.GlobalAveragePooling2D()(x)\n","  x = tf.keras.layers.BatchNormalization()(x)\n","  x = tf.keras.layers.Dropout(0.5)(x)\n","  x = tf.keras.layers.Dense(512, activation = \"relu\")(x)\n","  x = tf.keras.layers.Dropout(0.5)(x)\n","  x = tf.keras.layers.Dense( units = output_shape , activation='softmax')(x)\n","\n","  return x"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6LiWIePeezCi"},"outputs":[],"source":["\n","from keras.applications import InceptionV3\n","\n","def create_InceptionV3(input_shape = INPUT_SHAPE, output_shape = OUTPUT_SHAPE):\n","\n","  Inputs = tf.keras.Input(input_shape)\n","  \n","  inceptionv3 = InceptionV3( weights = \"imagenet\", include_top = False, input_tensor = Inputs )\n","  inceptionv3.trainable = False\n","\n","  for i in range(258, 311):\n","    inceptionv3.layers[i].trainable = True\n","   \n","  x = inceptionv3.output\n","  x = preprocess_layers(x, output_shape)\n","  model = tf.keras.Model(Inputs, x, name='InceptionV3')\n","\n","  return model_compile(model, input_shape) \n","  "]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5309,"status":"ok","timestamp":1677024883181,"user":{"displayName":"Neloy.","userId":"12580598278832678789"},"user_tz":-360},"id":"1QUkSXGWey_C","outputId":"d2b1c193-2bb9-46cc-9082-f3187b729bb8"},"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"InceptionV3\"\n","__________________________________________________________________________________________________\n"," Layer (type)                   Output Shape         Param #     Connected to                     \n","==================================================================================================\n"," input_2 (InputLayer)           [(None, 300, 300, 3  0           []                               \n","                                )]                                                                \n","                                                                                                  \n"," conv2d_94 (Conv2D)             (None, 149, 149, 32  864         ['input_2[0][0]']                \n","                                )                                                                 \n","                                                                                                  \n"," batch_normalization_95 (BatchN  (None, 149, 149, 32  96         ['conv2d_94[0][0]']              \n"," ormalization)                  )                                                                 \n","                                                                                                  \n"," activation_94 (Activation)     (None, 149, 149, 32  0           ['batch_normalization_95[0][0]'] \n","                                )                                                                 \n","                                                                                                  \n"," conv2d_95 (Conv2D)             (None, 147, 147, 32  9216        ['activation_94[0][0]']          \n","                                )                                                                 \n","                                                                                                  \n"," batch_normalization_96 (BatchN  (None, 147, 147, 32  96         ['conv2d_95[0][0]']              \n"," ormalization)                  )                                                                 \n","                                                                                                  \n"," activation_95 (Activation)     (None, 147, 147, 32  0           ['batch_normalization_96[0][0]'] \n","                                )                                                                 \n","                                                                                                  \n"," conv2d_96 (Conv2D)             (None, 147, 147, 64  18432       ['activation_95[0][0]']          \n","                                )                                                                 \n","                                                                                                  \n"," batch_normalization_97 (BatchN  (None, 147, 147, 64  192        ['conv2d_96[0][0]']              \n"," ormalization)                  )                                                                 \n","                                                                                                  \n"," activation_96 (Activation)     (None, 147, 147, 64  0           ['batch_normalization_97[0][0]'] \n","                                )                                                                 \n","                                                                                                  \n"," max_pooling2d_4 (MaxPooling2D)  (None, 73, 73, 64)  0           ['activation_96[0][0]']          \n","                                                                                                  \n"," conv2d_97 (Conv2D)             (None, 73, 73, 80)   5120        ['max_pooling2d_4[0][0]']        \n","                                                                                                  \n"," batch_normalization_98 (BatchN  (None, 73, 73, 80)  240         ['conv2d_97[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," activation_97 (Activation)     (None, 73, 73, 80)   0           ['batch_normalization_98[0][0]'] \n","                                                                                                  \n"," conv2d_98 (Conv2D)             (None, 71, 71, 192)  138240      ['activation_97[0][0]']          \n","                                                                                                  \n"," batch_normalization_99 (BatchN  (None, 71, 71, 192)  576        ['conv2d_98[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," activation_98 (Activation)     (None, 71, 71, 192)  0           ['batch_normalization_99[0][0]'] \n","                                                                                                  \n"," max_pooling2d_5 (MaxPooling2D)  (None, 35, 35, 192)  0          ['activation_98[0][0]']          \n","                                                                                                  \n"," conv2d_102 (Conv2D)            (None, 35, 35, 64)   12288       ['max_pooling2d_5[0][0]']        \n","                                                                                                  \n"," batch_normalization_103 (Batch  (None, 35, 35, 64)  192         ['conv2d_102[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_102 (Activation)    (None, 35, 35, 64)   0           ['batch_normalization_103[0][0]']\n","                                                                                                  \n"," conv2d_100 (Conv2D)            (None, 35, 35, 48)   9216        ['max_pooling2d_5[0][0]']        \n","                                                                                                  \n"," conv2d_103 (Conv2D)            (None, 35, 35, 96)   55296       ['activation_102[0][0]']         \n","                                                                                                  \n"," batch_normalization_101 (Batch  (None, 35, 35, 48)  144         ['conv2d_100[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_104 (Batch  (None, 35, 35, 96)  288         ['conv2d_103[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_100 (Activation)    (None, 35, 35, 48)   0           ['batch_normalization_101[0][0]']\n","                                                                                                  \n"," activation_103 (Activation)    (None, 35, 35, 96)   0           ['batch_normalization_104[0][0]']\n","                                                                                                  \n"," average_pooling2d_9 (AveragePo  (None, 35, 35, 192)  0          ['max_pooling2d_5[0][0]']        \n"," oling2D)                                                                                         \n","                                                                                                  \n"," conv2d_99 (Conv2D)             (None, 35, 35, 64)   12288       ['max_pooling2d_5[0][0]']        \n","                                                                                                  \n"," conv2d_101 (Conv2D)            (None, 35, 35, 64)   76800       ['activation_100[0][0]']         \n","                                                                                                  \n"," conv2d_104 (Conv2D)            (None, 35, 35, 96)   82944       ['activation_103[0][0]']         \n","                                                                                                  \n"," conv2d_105 (Conv2D)            (None, 35, 35, 32)   6144        ['average_pooling2d_9[0][0]']    \n","                                                                                                  \n"," batch_normalization_100 (Batch  (None, 35, 35, 64)  192         ['conv2d_99[0][0]']              \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_102 (Batch  (None, 35, 35, 64)  192         ['conv2d_101[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_105 (Batch  (None, 35, 35, 96)  288         ['conv2d_104[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_106 (Batch  (None, 35, 35, 32)  96          ['conv2d_105[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_99 (Activation)     (None, 35, 35, 64)   0           ['batch_normalization_100[0][0]']\n","                                                                                                  \n"," activation_101 (Activation)    (None, 35, 35, 64)   0           ['batch_normalization_102[0][0]']\n","                                                                                                  \n"," activation_104 (Activation)    (None, 35, 35, 96)   0           ['batch_normalization_105[0][0]']\n","                                                                                                  \n"," activation_105 (Activation)    (None, 35, 35, 32)   0           ['batch_normalization_106[0][0]']\n","                                                                                                  \n"," mixed0 (Concatenate)           (None, 35, 35, 256)  0           ['activation_99[0][0]',          \n","                                                                  'activation_101[0][0]',         \n","                                                                  'activation_104[0][0]',         \n","                                                                  'activation_105[0][0]']         \n","                                                                                                  \n"," conv2d_109 (Conv2D)            (None, 35, 35, 64)   16384       ['mixed0[0][0]']                 \n","                                                                                                  \n"," batch_normalization_110 (Batch  (None, 35, 35, 64)  192         ['conv2d_109[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_109 (Activation)    (None, 35, 35, 64)   0           ['batch_normalization_110[0][0]']\n","                                                                                                  \n"," conv2d_107 (Conv2D)            (None, 35, 35, 48)   12288       ['mixed0[0][0]']                 \n","                                                                                                  \n"," conv2d_110 (Conv2D)            (None, 35, 35, 96)   55296       ['activation_109[0][0]']         \n","                                                                                                  \n"," batch_normalization_108 (Batch  (None, 35, 35, 48)  144         ['conv2d_107[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_111 (Batch  (None, 35, 35, 96)  288         ['conv2d_110[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_107 (Activation)    (None, 35, 35, 48)   0           ['batch_normalization_108[0][0]']\n","                                                                                                  \n"," activation_110 (Activation)    (None, 35, 35, 96)   0           ['batch_normalization_111[0][0]']\n","                                                                                                  \n"," average_pooling2d_10 (AverageP  (None, 35, 35, 256)  0          ['mixed0[0][0]']                 \n"," ooling2D)                                                                                        \n","                                                                                                  \n"," conv2d_106 (Conv2D)            (None, 35, 35, 64)   16384       ['mixed0[0][0]']                 \n","                                                                                                  \n"," conv2d_108 (Conv2D)            (None, 35, 35, 64)   76800       ['activation_107[0][0]']         \n","                                                                                                  \n"," conv2d_111 (Conv2D)            (None, 35, 35, 96)   82944       ['activation_110[0][0]']         \n","                                                                                                  \n"," conv2d_112 (Conv2D)            (None, 35, 35, 64)   16384       ['average_pooling2d_10[0][0]']   \n","                                                                                                  \n"," batch_normalization_107 (Batch  (None, 35, 35, 64)  192         ['conv2d_106[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_109 (Batch  (None, 35, 35, 64)  192         ['conv2d_108[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_112 (Batch  (None, 35, 35, 96)  288         ['conv2d_111[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_113 (Batch  (None, 35, 35, 64)  192         ['conv2d_112[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_106 (Activation)    (None, 35, 35, 64)   0           ['batch_normalization_107[0][0]']\n","                                                                                                  \n"," activation_108 (Activation)    (None, 35, 35, 64)   0           ['batch_normalization_109[0][0]']\n","                                                                                                  \n"," activation_111 (Activation)    (None, 35, 35, 96)   0           ['batch_normalization_112[0][0]']\n","                                                                                                  \n"," activation_112 (Activation)    (None, 35, 35, 64)   0           ['batch_normalization_113[0][0]']\n","                                                                                                  \n"," mixed1 (Concatenate)           (None, 35, 35, 288)  0           ['activation_106[0][0]',         \n","                                                                  'activation_108[0][0]',         \n","                                                                  'activation_111[0][0]',         \n","                                                                  'activation_112[0][0]']         \n","                                                                                                  \n"," conv2d_116 (Conv2D)            (None, 35, 35, 64)   18432       ['mixed1[0][0]']                 \n","                                                                                                  \n"," batch_normalization_117 (Batch  (None, 35, 35, 64)  192         ['conv2d_116[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_116 (Activation)    (None, 35, 35, 64)   0           ['batch_normalization_117[0][0]']\n","                                                                                                  \n"," conv2d_114 (Conv2D)            (None, 35, 35, 48)   13824       ['mixed1[0][0]']                 \n","                                                                                                  \n"," conv2d_117 (Conv2D)            (None, 35, 35, 96)   55296       ['activation_116[0][0]']         \n","                                                                                                  \n"," batch_normalization_115 (Batch  (None, 35, 35, 48)  144         ['conv2d_114[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_118 (Batch  (None, 35, 35, 96)  288         ['conv2d_117[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_114 (Activation)    (None, 35, 35, 48)   0           ['batch_normalization_115[0][0]']\n","                                                                                                  \n"," activation_117 (Activation)    (None, 35, 35, 96)   0           ['batch_normalization_118[0][0]']\n","                                                                                                  \n"," average_pooling2d_11 (AverageP  (None, 35, 35, 288)  0          ['mixed1[0][0]']                 \n"," ooling2D)                                                                                        \n","                                                                                                  \n"," conv2d_113 (Conv2D)            (None, 35, 35, 64)   18432       ['mixed1[0][0]']                 \n","                                                                                                  \n"," conv2d_115 (Conv2D)            (None, 35, 35, 64)   76800       ['activation_114[0][0]']         \n","                                                                                                  \n"," conv2d_118 (Conv2D)            (None, 35, 35, 96)   82944       ['activation_117[0][0]']         \n","                                                                                                  \n"," conv2d_119 (Conv2D)            (None, 35, 35, 64)   18432       ['average_pooling2d_11[0][0]']   \n","                                                                                                  \n"," batch_normalization_114 (Batch  (None, 35, 35, 64)  192         ['conv2d_113[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_116 (Batch  (None, 35, 35, 64)  192         ['conv2d_115[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_119 (Batch  (None, 35, 35, 96)  288         ['conv2d_118[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_120 (Batch  (None, 35, 35, 64)  192         ['conv2d_119[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_113 (Activation)    (None, 35, 35, 64)   0           ['batch_normalization_114[0][0]']\n","                                                                                                  \n"," activation_115 (Activation)    (None, 35, 35, 64)   0           ['batch_normalization_116[0][0]']\n","                                                                                                  \n"," activation_118 (Activation)    (None, 35, 35, 96)   0           ['batch_normalization_119[0][0]']\n","                                                                                                  \n"," activation_119 (Activation)    (None, 35, 35, 64)   0           ['batch_normalization_120[0][0]']\n","                                                                                                  \n"," mixed2 (Concatenate)           (None, 35, 35, 288)  0           ['activation_113[0][0]',         \n","                                                                  'activation_115[0][0]',         \n","                                                                  'activation_118[0][0]',         \n","                                                                  'activation_119[0][0]']         \n","                                                                                                  \n"," conv2d_121 (Conv2D)            (None, 35, 35, 64)   18432       ['mixed2[0][0]']                 \n","                                                                                                  \n"," batch_normalization_122 (Batch  (None, 35, 35, 64)  192         ['conv2d_121[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_121 (Activation)    (None, 35, 35, 64)   0           ['batch_normalization_122[0][0]']\n","                                                                                                  \n"," conv2d_122 (Conv2D)            (None, 35, 35, 96)   55296       ['activation_121[0][0]']         \n","                                                                                                  \n"," batch_normalization_123 (Batch  (None, 35, 35, 96)  288         ['conv2d_122[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_122 (Activation)    (None, 35, 35, 96)   0           ['batch_normalization_123[0][0]']\n","                                                                                                  \n"," conv2d_120 (Conv2D)            (None, 17, 17, 384)  995328      ['mixed2[0][0]']                 \n","                                                                                                  \n"," conv2d_123 (Conv2D)            (None, 17, 17, 96)   82944       ['activation_122[0][0]']         \n","                                                                                                  \n"," batch_normalization_121 (Batch  (None, 17, 17, 384)  1152       ['conv2d_120[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_124 (Batch  (None, 17, 17, 96)  288         ['conv2d_123[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_120 (Activation)    (None, 17, 17, 384)  0           ['batch_normalization_121[0][0]']\n","                                                                                                  \n"," activation_123 (Activation)    (None, 17, 17, 96)   0           ['batch_normalization_124[0][0]']\n","                                                                                                  \n"," max_pooling2d_6 (MaxPooling2D)  (None, 17, 17, 288)  0          ['mixed2[0][0]']                 \n","                                                                                                  \n"," mixed3 (Concatenate)           (None, 17, 17, 768)  0           ['activation_120[0][0]',         \n","                                                                  'activation_123[0][0]',         \n","                                                                  'max_pooling2d_6[0][0]']        \n","                                                                                                  \n"," conv2d_128 (Conv2D)            (None, 17, 17, 128)  98304       ['mixed3[0][0]']                 \n","                                                                                                  \n"," batch_normalization_129 (Batch  (None, 17, 17, 128)  384        ['conv2d_128[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_128 (Activation)    (None, 17, 17, 128)  0           ['batch_normalization_129[0][0]']\n","                                                                                                  \n"," conv2d_129 (Conv2D)            (None, 17, 17, 128)  114688      ['activation_128[0][0]']         \n","                                                                                                  \n"," batch_normalization_130 (Batch  (None, 17, 17, 128)  384        ['conv2d_129[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_129 (Activation)    (None, 17, 17, 128)  0           ['batch_normalization_130[0][0]']\n","                                                                                                  \n"," conv2d_125 (Conv2D)            (None, 17, 17, 128)  98304       ['mixed3[0][0]']                 \n","                                                                                                  \n"," conv2d_130 (Conv2D)            (None, 17, 17, 128)  114688      ['activation_129[0][0]']         \n","                                                                                                  \n"," batch_normalization_126 (Batch  (None, 17, 17, 128)  384        ['conv2d_125[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_131 (Batch  (None, 17, 17, 128)  384        ['conv2d_130[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_125 (Activation)    (None, 17, 17, 128)  0           ['batch_normalization_126[0][0]']\n","                                                                                                  \n"," activation_130 (Activation)    (None, 17, 17, 128)  0           ['batch_normalization_131[0][0]']\n","                                                                                                  \n"," conv2d_126 (Conv2D)            (None, 17, 17, 128)  114688      ['activation_125[0][0]']         \n","                                                                                                  \n"," conv2d_131 (Conv2D)            (None, 17, 17, 128)  114688      ['activation_130[0][0]']         \n","                                                                                                  \n"," batch_normalization_127 (Batch  (None, 17, 17, 128)  384        ['conv2d_126[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_132 (Batch  (None, 17, 17, 128)  384        ['conv2d_131[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_126 (Activation)    (None, 17, 17, 128)  0           ['batch_normalization_127[0][0]']\n","                                                                                                  \n"," activation_131 (Activation)    (None, 17, 17, 128)  0           ['batch_normalization_132[0][0]']\n","                                                                                                  \n"," average_pooling2d_12 (AverageP  (None, 17, 17, 768)  0          ['mixed3[0][0]']                 \n"," ooling2D)                                                                                        \n","                                                                                                  \n"," conv2d_124 (Conv2D)            (None, 17, 17, 192)  147456      ['mixed3[0][0]']                 \n","                                                                                                  \n"," conv2d_127 (Conv2D)            (None, 17, 17, 192)  172032      ['activation_126[0][0]']         \n","                                                                                                  \n"," conv2d_132 (Conv2D)            (None, 17, 17, 192)  172032      ['activation_131[0][0]']         \n","                                                                                                  \n"," conv2d_133 (Conv2D)            (None, 17, 17, 192)  147456      ['average_pooling2d_12[0][0]']   \n","                                                                                                  \n"," batch_normalization_125 (Batch  (None, 17, 17, 192)  576        ['conv2d_124[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_128 (Batch  (None, 17, 17, 192)  576        ['conv2d_127[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_133 (Batch  (None, 17, 17, 192)  576        ['conv2d_132[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_134 (Batch  (None, 17, 17, 192)  576        ['conv2d_133[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_124 (Activation)    (None, 17, 17, 192)  0           ['batch_normalization_125[0][0]']\n","                                                                                                  \n"," activation_127 (Activation)    (None, 17, 17, 192)  0           ['batch_normalization_128[0][0]']\n","                                                                                                  \n"," activation_132 (Activation)    (None, 17, 17, 192)  0           ['batch_normalization_133[0][0]']\n","                                                                                                  \n"," activation_133 (Activation)    (None, 17, 17, 192)  0           ['batch_normalization_134[0][0]']\n","                                                                                                  \n"," mixed4 (Concatenate)           (None, 17, 17, 768)  0           ['activation_124[0][0]',         \n","                                                                  'activation_127[0][0]',         \n","                                                                  'activation_132[0][0]',         \n","                                                                  'activation_133[0][0]']         \n","                                                                                                  \n"," conv2d_138 (Conv2D)            (None, 17, 17, 160)  122880      ['mixed4[0][0]']                 \n","                                                                                                  \n"," batch_normalization_139 (Batch  (None, 17, 17, 160)  480        ['conv2d_138[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_138 (Activation)    (None, 17, 17, 160)  0           ['batch_normalization_139[0][0]']\n","                                                                                                  \n"," conv2d_139 (Conv2D)            (None, 17, 17, 160)  179200      ['activation_138[0][0]']         \n","                                                                                                  \n"," batch_normalization_140 (Batch  (None, 17, 17, 160)  480        ['conv2d_139[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_139 (Activation)    (None, 17, 17, 160)  0           ['batch_normalization_140[0][0]']\n","                                                                                                  \n"," conv2d_135 (Conv2D)            (None, 17, 17, 160)  122880      ['mixed4[0][0]']                 \n","                                                                                                  \n"," conv2d_140 (Conv2D)            (None, 17, 17, 160)  179200      ['activation_139[0][0]']         \n","                                                                                                  \n"," batch_normalization_136 (Batch  (None, 17, 17, 160)  480        ['conv2d_135[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_141 (Batch  (None, 17, 17, 160)  480        ['conv2d_140[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_135 (Activation)    (None, 17, 17, 160)  0           ['batch_normalization_136[0][0]']\n","                                                                                                  \n"," activation_140 (Activation)    (None, 17, 17, 160)  0           ['batch_normalization_141[0][0]']\n","                                                                                                  \n"," conv2d_136 (Conv2D)            (None, 17, 17, 160)  179200      ['activation_135[0][0]']         \n","                                                                                                  \n"," conv2d_141 (Conv2D)            (None, 17, 17, 160)  179200      ['activation_140[0][0]']         \n","                                                                                                  \n"," batch_normalization_137 (Batch  (None, 17, 17, 160)  480        ['conv2d_136[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_142 (Batch  (None, 17, 17, 160)  480        ['conv2d_141[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_136 (Activation)    (None, 17, 17, 160)  0           ['batch_normalization_137[0][0]']\n","                                                                                                  \n"," activation_141 (Activation)    (None, 17, 17, 160)  0           ['batch_normalization_142[0][0]']\n","                                                                                                  \n"," average_pooling2d_13 (AverageP  (None, 17, 17, 768)  0          ['mixed4[0][0]']                 \n"," ooling2D)                                                                                        \n","                                                                                                  \n"," conv2d_134 (Conv2D)            (None, 17, 17, 192)  147456      ['mixed4[0][0]']                 \n","                                                                                                  \n"," conv2d_137 (Conv2D)            (None, 17, 17, 192)  215040      ['activation_136[0][0]']         \n","                                                                                                  \n"," conv2d_142 (Conv2D)            (None, 17, 17, 192)  215040      ['activation_141[0][0]']         \n","                                                                                                  \n"," conv2d_143 (Conv2D)            (None, 17, 17, 192)  147456      ['average_pooling2d_13[0][0]']   \n","                                                                                                  \n"," batch_normalization_135 (Batch  (None, 17, 17, 192)  576        ['conv2d_134[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_138 (Batch  (None, 17, 17, 192)  576        ['conv2d_137[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_143 (Batch  (None, 17, 17, 192)  576        ['conv2d_142[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_144 (Batch  (None, 17, 17, 192)  576        ['conv2d_143[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_134 (Activation)    (None, 17, 17, 192)  0           ['batch_normalization_135[0][0]']\n","                                                                                                  \n"," activation_137 (Activation)    (None, 17, 17, 192)  0           ['batch_normalization_138[0][0]']\n","                                                                                                  \n"," activation_142 (Activation)    (None, 17, 17, 192)  0           ['batch_normalization_143[0][0]']\n","                                                                                                  \n"," activation_143 (Activation)    (None, 17, 17, 192)  0           ['batch_normalization_144[0][0]']\n","                                                                                                  \n"," mixed5 (Concatenate)           (None, 17, 17, 768)  0           ['activation_134[0][0]',         \n","                                                                  'activation_137[0][0]',         \n","                                                                  'activation_142[0][0]',         \n","                                                                  'activation_143[0][0]']         \n","                                                                                                  \n"," conv2d_148 (Conv2D)            (None, 17, 17, 160)  122880      ['mixed5[0][0]']                 \n","                                                                                                  \n"," batch_normalization_149 (Batch  (None, 17, 17, 160)  480        ['conv2d_148[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_148 (Activation)    (None, 17, 17, 160)  0           ['batch_normalization_149[0][0]']\n","                                                                                                  \n"," conv2d_149 (Conv2D)            (None, 17, 17, 160)  179200      ['activation_148[0][0]']         \n","                                                                                                  \n"," batch_normalization_150 (Batch  (None, 17, 17, 160)  480        ['conv2d_149[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_149 (Activation)    (None, 17, 17, 160)  0           ['batch_normalization_150[0][0]']\n","                                                                                                  \n"," conv2d_145 (Conv2D)            (None, 17, 17, 160)  122880      ['mixed5[0][0]']                 \n","                                                                                                  \n"," conv2d_150 (Conv2D)            (None, 17, 17, 160)  179200      ['activation_149[0][0]']         \n","                                                                                                  \n"," batch_normalization_146 (Batch  (None, 17, 17, 160)  480        ['conv2d_145[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_151 (Batch  (None, 17, 17, 160)  480        ['conv2d_150[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_145 (Activation)    (None, 17, 17, 160)  0           ['batch_normalization_146[0][0]']\n","                                                                                                  \n"," activation_150 (Activation)    (None, 17, 17, 160)  0           ['batch_normalization_151[0][0]']\n","                                                                                                  \n"," conv2d_146 (Conv2D)            (None, 17, 17, 160)  179200      ['activation_145[0][0]']         \n","                                                                                                  \n"," conv2d_151 (Conv2D)            (None, 17, 17, 160)  179200      ['activation_150[0][0]']         \n","                                                                                                  \n"," batch_normalization_147 (Batch  (None, 17, 17, 160)  480        ['conv2d_146[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_152 (Batch  (None, 17, 17, 160)  480        ['conv2d_151[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_146 (Activation)    (None, 17, 17, 160)  0           ['batch_normalization_147[0][0]']\n","                                                                                                  \n"," activation_151 (Activation)    (None, 17, 17, 160)  0           ['batch_normalization_152[0][0]']\n","                                                                                                  \n"," average_pooling2d_14 (AverageP  (None, 17, 17, 768)  0          ['mixed5[0][0]']                 \n"," ooling2D)                                                                                        \n","                                                                                                  \n"," conv2d_144 (Conv2D)            (None, 17, 17, 192)  147456      ['mixed5[0][0]']                 \n","                                                                                                  \n"," conv2d_147 (Conv2D)            (None, 17, 17, 192)  215040      ['activation_146[0][0]']         \n","                                                                                                  \n"," conv2d_152 (Conv2D)            (None, 17, 17, 192)  215040      ['activation_151[0][0]']         \n","                                                                                                  \n"," conv2d_153 (Conv2D)            (None, 17, 17, 192)  147456      ['average_pooling2d_14[0][0]']   \n","                                                                                                  \n"," batch_normalization_145 (Batch  (None, 17, 17, 192)  576        ['conv2d_144[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_148 (Batch  (None, 17, 17, 192)  576        ['conv2d_147[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_153 (Batch  (None, 17, 17, 192)  576        ['conv2d_152[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_154 (Batch  (None, 17, 17, 192)  576        ['conv2d_153[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_144 (Activation)    (None, 17, 17, 192)  0           ['batch_normalization_145[0][0]']\n","                                                                                                  \n"," activation_147 (Activation)    (None, 17, 17, 192)  0           ['batch_normalization_148[0][0]']\n","                                                                                                  \n"," activation_152 (Activation)    (None, 17, 17, 192)  0           ['batch_normalization_153[0][0]']\n","                                                                                                  \n"," activation_153 (Activation)    (None, 17, 17, 192)  0           ['batch_normalization_154[0][0]']\n","                                                                                                  \n"," mixed6 (Concatenate)           (None, 17, 17, 768)  0           ['activation_144[0][0]',         \n","                                                                  'activation_147[0][0]',         \n","                                                                  'activation_152[0][0]',         \n","                                                                  'activation_153[0][0]']         \n","                                                                                                  \n"," conv2d_158 (Conv2D)            (None, 17, 17, 192)  147456      ['mixed6[0][0]']                 \n","                                                                                                  \n"," batch_normalization_159 (Batch  (None, 17, 17, 192)  576        ['conv2d_158[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_158 (Activation)    (None, 17, 17, 192)  0           ['batch_normalization_159[0][0]']\n","                                                                                                  \n"," conv2d_159 (Conv2D)            (None, 17, 17, 192)  258048      ['activation_158[0][0]']         \n","                                                                                                  \n"," batch_normalization_160 (Batch  (None, 17, 17, 192)  576        ['conv2d_159[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_159 (Activation)    (None, 17, 17, 192)  0           ['batch_normalization_160[0][0]']\n","                                                                                                  \n"," conv2d_155 (Conv2D)            (None, 17, 17, 192)  147456      ['mixed6[0][0]']                 \n","                                                                                                  \n"," conv2d_160 (Conv2D)            (None, 17, 17, 192)  258048      ['activation_159[0][0]']         \n","                                                                                                  \n"," batch_normalization_156 (Batch  (None, 17, 17, 192)  576        ['conv2d_155[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_161 (Batch  (None, 17, 17, 192)  576        ['conv2d_160[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_155 (Activation)    (None, 17, 17, 192)  0           ['batch_normalization_156[0][0]']\n","                                                                                                  \n"," activation_160 (Activation)    (None, 17, 17, 192)  0           ['batch_normalization_161[0][0]']\n","                                                                                                  \n"," conv2d_156 (Conv2D)            (None, 17, 17, 192)  258048      ['activation_155[0][0]']         \n","                                                                                                  \n"," conv2d_161 (Conv2D)            (None, 17, 17, 192)  258048      ['activation_160[0][0]']         \n","                                                                                                  \n"," batch_normalization_157 (Batch  (None, 17, 17, 192)  576        ['conv2d_156[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_162 (Batch  (None, 17, 17, 192)  576        ['conv2d_161[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_156 (Activation)    (None, 17, 17, 192)  0           ['batch_normalization_157[0][0]']\n","                                                                                                  \n"," activation_161 (Activation)    (None, 17, 17, 192)  0           ['batch_normalization_162[0][0]']\n","                                                                                                  \n"," average_pooling2d_15 (AverageP  (None, 17, 17, 768)  0          ['mixed6[0][0]']                 \n"," ooling2D)                                                                                        \n","                                                                                                  \n"," conv2d_154 (Conv2D)            (None, 17, 17, 192)  147456      ['mixed6[0][0]']                 \n","                                                                                                  \n"," conv2d_157 (Conv2D)            (None, 17, 17, 192)  258048      ['activation_156[0][0]']         \n","                                                                                                  \n"," conv2d_162 (Conv2D)            (None, 17, 17, 192)  258048      ['activation_161[0][0]']         \n","                                                                                                  \n"," conv2d_163 (Conv2D)            (None, 17, 17, 192)  147456      ['average_pooling2d_15[0][0]']   \n","                                                                                                  \n"," batch_normalization_155 (Batch  (None, 17, 17, 192)  576        ['conv2d_154[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_158 (Batch  (None, 17, 17, 192)  576        ['conv2d_157[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_163 (Batch  (None, 17, 17, 192)  576        ['conv2d_162[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_164 (Batch  (None, 17, 17, 192)  576        ['conv2d_163[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_154 (Activation)    (None, 17, 17, 192)  0           ['batch_normalization_155[0][0]']\n","                                                                                                  \n"," activation_157 (Activation)    (None, 17, 17, 192)  0           ['batch_normalization_158[0][0]']\n","                                                                                                  \n"," activation_162 (Activation)    (None, 17, 17, 192)  0           ['batch_normalization_163[0][0]']\n","                                                                                                  \n"," activation_163 (Activation)    (None, 17, 17, 192)  0           ['batch_normalization_164[0][0]']\n","                                                                                                  \n"," mixed7 (Concatenate)           (None, 17, 17, 768)  0           ['activation_154[0][0]',         \n","                                                                  'activation_157[0][0]',         \n","                                                                  'activation_162[0][0]',         \n","                                                                  'activation_163[0][0]']         \n","                                                                                                  \n"," conv2d_166 (Conv2D)            (None, 17, 17, 192)  147456      ['mixed7[0][0]']                 \n","                                                                                                  \n"," batch_normalization_167 (Batch  (None, 17, 17, 192)  576        ['conv2d_166[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_166 (Activation)    (None, 17, 17, 192)  0           ['batch_normalization_167[0][0]']\n","                                                                                                  \n"," conv2d_167 (Conv2D)            (None, 17, 17, 192)  258048      ['activation_166[0][0]']         \n","                                                                                                  \n"," batch_normalization_168 (Batch  (None, 17, 17, 192)  576        ['conv2d_167[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_167 (Activation)    (None, 17, 17, 192)  0           ['batch_normalization_168[0][0]']\n","                                                                                                  \n"," conv2d_164 (Conv2D)            (None, 17, 17, 192)  147456      ['mixed7[0][0]']                 \n","                                                                                                  \n"," conv2d_168 (Conv2D)            (None, 17, 17, 192)  258048      ['activation_167[0][0]']         \n","                                                                                                  \n"," batch_normalization_165 (Batch  (None, 17, 17, 192)  576        ['conv2d_164[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_169 (Batch  (None, 17, 17, 192)  576        ['conv2d_168[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_164 (Activation)    (None, 17, 17, 192)  0           ['batch_normalization_165[0][0]']\n","                                                                                                  \n"," activation_168 (Activation)    (None, 17, 17, 192)  0           ['batch_normalization_169[0][0]']\n","                                                                                                  \n"," conv2d_165 (Conv2D)            (None, 8, 8, 320)    552960      ['activation_164[0][0]']         \n","                                                                                                  \n"," conv2d_169 (Conv2D)            (None, 8, 8, 192)    331776      ['activation_168[0][0]']         \n","                                                                                                  \n"," batch_normalization_166 (Batch  (None, 8, 8, 320)   960         ['conv2d_165[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_170 (Batch  (None, 8, 8, 192)   576         ['conv2d_169[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_165 (Activation)    (None, 8, 8, 320)    0           ['batch_normalization_166[0][0]']\n","                                                                                                  \n"," activation_169 (Activation)    (None, 8, 8, 192)    0           ['batch_normalization_170[0][0]']\n","                                                                                                  \n"," max_pooling2d_7 (MaxPooling2D)  (None, 8, 8, 768)   0           ['mixed7[0][0]']                 \n","                                                                                                  \n"," mixed8 (Concatenate)           (None, 8, 8, 1280)   0           ['activation_165[0][0]',         \n","                                                                  'activation_169[0][0]',         \n","                                                                  'max_pooling2d_7[0][0]']        \n","                                                                                                  \n"," conv2d_174 (Conv2D)            (None, 8, 8, 448)    573440      ['mixed8[0][0]']                 \n","                                                                                                  \n"," batch_normalization_175 (Batch  (None, 8, 8, 448)   1344        ['conv2d_174[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_174 (Activation)    (None, 8, 8, 448)    0           ['batch_normalization_175[0][0]']\n","                                                                                                  \n"," conv2d_171 (Conv2D)            (None, 8, 8, 384)    491520      ['mixed8[0][0]']                 \n","                                                                                                  \n"," conv2d_175 (Conv2D)            (None, 8, 8, 384)    1548288     ['activation_174[0][0]']         \n","                                                                                                  \n"," batch_normalization_172 (Batch  (None, 8, 8, 384)   1152        ['conv2d_171[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_176 (Batch  (None, 8, 8, 384)   1152        ['conv2d_175[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_171 (Activation)    (None, 8, 8, 384)    0           ['batch_normalization_172[0][0]']\n","                                                                                                  \n"," activation_175 (Activation)    (None, 8, 8, 384)    0           ['batch_normalization_176[0][0]']\n","                                                                                                  \n"," conv2d_172 (Conv2D)            (None, 8, 8, 384)    442368      ['activation_171[0][0]']         \n","                                                                                                  \n"," conv2d_173 (Conv2D)            (None, 8, 8, 384)    442368      ['activation_171[0][0]']         \n","                                                                                                  \n"," conv2d_176 (Conv2D)            (None, 8, 8, 384)    442368      ['activation_175[0][0]']         \n","                                                                                                  \n"," conv2d_177 (Conv2D)            (None, 8, 8, 384)    442368      ['activation_175[0][0]']         \n","                                                                                                  \n"," average_pooling2d_16 (AverageP  (None, 8, 8, 1280)  0           ['mixed8[0][0]']                 \n"," ooling2D)                                                                                        \n","                                                                                                  \n"," conv2d_170 (Conv2D)            (None, 8, 8, 320)    409600      ['mixed8[0][0]']                 \n","                                                                                                  \n"," batch_normalization_173 (Batch  (None, 8, 8, 384)   1152        ['conv2d_172[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_174 (Batch  (None, 8, 8, 384)   1152        ['conv2d_173[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_177 (Batch  (None, 8, 8, 384)   1152        ['conv2d_176[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_178 (Batch  (None, 8, 8, 384)   1152        ['conv2d_177[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," conv2d_178 (Conv2D)            (None, 8, 8, 192)    245760      ['average_pooling2d_16[0][0]']   \n","                                                                                                  \n"," batch_normalization_171 (Batch  (None, 8, 8, 320)   960         ['conv2d_170[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_172 (Activation)    (None, 8, 8, 384)    0           ['batch_normalization_173[0][0]']\n","                                                                                                  \n"," activation_173 (Activation)    (None, 8, 8, 384)    0           ['batch_normalization_174[0][0]']\n","                                                                                                  \n"," activation_176 (Activation)    (None, 8, 8, 384)    0           ['batch_normalization_177[0][0]']\n","                                                                                                  \n"," activation_177 (Activation)    (None, 8, 8, 384)    0           ['batch_normalization_178[0][0]']\n","                                                                                                  \n"," batch_normalization_179 (Batch  (None, 8, 8, 192)   576         ['conv2d_178[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_170 (Activation)    (None, 8, 8, 320)    0           ['batch_normalization_171[0][0]']\n","                                                                                                  \n"," mixed9_0 (Concatenate)         (None, 8, 8, 768)    0           ['activation_172[0][0]',         \n","                                                                  'activation_173[0][0]']         \n","                                                                                                  \n"," concatenate_2 (Concatenate)    (None, 8, 8, 768)    0           ['activation_176[0][0]',         \n","                                                                  'activation_177[0][0]']         \n","                                                                                                  \n"," activation_178 (Activation)    (None, 8, 8, 192)    0           ['batch_normalization_179[0][0]']\n","                                                                                                  \n"," mixed9 (Concatenate)           (None, 8, 8, 2048)   0           ['activation_170[0][0]',         \n","                                                                  'mixed9_0[0][0]',               \n","                                                                  'concatenate_2[0][0]',          \n","                                                                  'activation_178[0][0]']         \n","                                                                                                  \n"," conv2d_183 (Conv2D)            (None, 8, 8, 448)    917504      ['mixed9[0][0]']                 \n","                                                                                                  \n"," batch_normalization_184 (Batch  (None, 8, 8, 448)   1344        ['conv2d_183[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_183 (Activation)    (None, 8, 8, 448)    0           ['batch_normalization_184[0][0]']\n","                                                                                                  \n"," conv2d_180 (Conv2D)            (None, 8, 8, 384)    786432      ['mixed9[0][0]']                 \n","                                                                                                  \n"," conv2d_184 (Conv2D)            (None, 8, 8, 384)    1548288     ['activation_183[0][0]']         \n","                                                                                                  \n"," batch_normalization_181 (Batch  (None, 8, 8, 384)   1152        ['conv2d_180[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_185 (Batch  (None, 8, 8, 384)   1152        ['conv2d_184[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_180 (Activation)    (None, 8, 8, 384)    0           ['batch_normalization_181[0][0]']\n","                                                                                                  \n"," activation_184 (Activation)    (None, 8, 8, 384)    0           ['batch_normalization_185[0][0]']\n","                                                                                                  \n"," conv2d_181 (Conv2D)            (None, 8, 8, 384)    442368      ['activation_180[0][0]']         \n","                                                                                                  \n"," conv2d_182 (Conv2D)            (None, 8, 8, 384)    442368      ['activation_180[0][0]']         \n","                                                                                                  \n"," conv2d_185 (Conv2D)            (None, 8, 8, 384)    442368      ['activation_184[0][0]']         \n","                                                                                                  \n"," conv2d_186 (Conv2D)            (None, 8, 8, 384)    442368      ['activation_184[0][0]']         \n","                                                                                                  \n"," average_pooling2d_17 (AverageP  (None, 8, 8, 2048)  0           ['mixed9[0][0]']                 \n"," ooling2D)                                                                                        \n","                                                                                                  \n"," conv2d_179 (Conv2D)            (None, 8, 8, 320)    655360      ['mixed9[0][0]']                 \n","                                                                                                  \n"," batch_normalization_182 (Batch  (None, 8, 8, 384)   1152        ['conv2d_181[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_183 (Batch  (None, 8, 8, 384)   1152        ['conv2d_182[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_186 (Batch  (None, 8, 8, 384)   1152        ['conv2d_185[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," batch_normalization_187 (Batch  (None, 8, 8, 384)   1152        ['conv2d_186[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," conv2d_187 (Conv2D)            (None, 8, 8, 192)    393216      ['average_pooling2d_17[0][0]']   \n","                                                                                                  \n"," batch_normalization_180 (Batch  (None, 8, 8, 320)   960         ['conv2d_179[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_181 (Activation)    (None, 8, 8, 384)    0           ['batch_normalization_182[0][0]']\n","                                                                                                  \n"," activation_182 (Activation)    (None, 8, 8, 384)    0           ['batch_normalization_183[0][0]']\n","                                                                                                  \n"," activation_185 (Activation)    (None, 8, 8, 384)    0           ['batch_normalization_186[0][0]']\n","                                                                                                  \n"," activation_186 (Activation)    (None, 8, 8, 384)    0           ['batch_normalization_187[0][0]']\n","                                                                                                  \n"," batch_normalization_188 (Batch  (None, 8, 8, 192)   576         ['conv2d_187[0][0]']             \n"," Normalization)                                                                                   \n","                                                                                                  \n"," activation_179 (Activation)    (None, 8, 8, 320)    0           ['batch_normalization_180[0][0]']\n","                                                                                                  \n"," mixed9_1 (Concatenate)         (None, 8, 8, 768)    0           ['activation_181[0][0]',         \n","                                                                  'activation_182[0][0]']         \n","                                                                                                  \n"," concatenate_3 (Concatenate)    (None, 8, 8, 768)    0           ['activation_185[0][0]',         \n","                                                                  'activation_186[0][0]']         \n","                                                                                                  \n"," activation_187 (Activation)    (None, 8, 8, 192)    0           ['batch_normalization_188[0][0]']\n","                                                                                                  \n"," mixed10 (Concatenate)          (None, 8, 8, 2048)   0           ['activation_179[0][0]',         \n","                                                                  'mixed9_1[0][0]',               \n","                                                                  'concatenate_3[0][0]',          \n","                                                                  'activation_187[0][0]']         \n","                                                                                                  \n"," global_average_pooling2d_1 (Gl  (None, 2048)        0           ['mixed10[0][0]']                \n"," obalAveragePooling2D)                                                                            \n","                                                                                                  \n"," batch_normalization_189 (Batch  (None, 2048)        8192        ['global_average_pooling2d_1[0][0\n"," Normalization)                                                  ]']                              \n","                                                                                                  \n"," dropout_2 (Dropout)            (None, 2048)         0           ['batch_normalization_189[0][0]']\n","                                                                                                  \n"," dense_2 (Dense)                (None, 512)          1049088     ['dropout_2[0][0]']              \n","                                                                                                  \n"," dropout_3 (Dropout)            (None, 512)          0           ['dense_2[0][0]']                \n","                                                                                                  \n"," dense_3 (Dense)                (None, 2)            1026        ['dropout_3[0][0]']              \n","                                                                                                  \n","==================================================================================================\n","Total params: 22,861,090\n","Trainable params: 9,554,626\n","Non-trainable params: 13,306,464\n","__________________________________________________________________________________________________\n"]}],"source":["\n","Model_InceptionV3 = create_InceptionV3()\n","\n","Model_InceptionV3.summary()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":415},"id":"hmfUsVuBey7S","outputId":"fb91ba1e-964d-4d96-9d5f-767626a64b7d","executionInfo":{"status":"error","timestamp":1677024472918,"user_tz":-360,"elapsed":1513349,"user":{"displayName":"Neloy.","userId":"12580598278832678789"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/20\n"," 66/686 [=>............................] - ETA: 3:49:03 - loss: 0.9152 - accuracy: 0.6361"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-41-1394e2709973>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mcall_backs_InceptionV3\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mCallbacks\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"InceptionV3_Elbow_FD\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m Model_InceptionV3.fit(\n\u001b[0m\u001b[1;32m      4\u001b[0m     \u001b[0mx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtrain_ds\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m     \u001b[0mepochs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m20\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/keras/utils/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     63\u001b[0m         \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     64\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 65\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     66\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     67\u001b[0m             \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_process_traceback_frames\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__traceback__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/keras/engine/training.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_batch_size, validation_freq, max_queue_size, workers, use_multiprocessing)\u001b[0m\n\u001b[1;32m   1648\u001b[0m                         ):\n\u001b[1;32m   1649\u001b[0m                             \u001b[0mcallbacks\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mon_train_batch_begin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstep\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1650\u001b[0;31m                             \u001b[0mtmp_logs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtrain_function\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0miterator\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1651\u001b[0m                             \u001b[0;32mif\u001b[0m \u001b[0mdata_handler\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshould_sync\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1652\u001b[0m                                 \u001b[0mcontext\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0masync_wait\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/tensorflow/python/util/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    148\u001b[0m     \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    149\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 150\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mfn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    151\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    152\u001b[0m       \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_process_traceback_frames\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__traceback__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/tensorflow/python/eager/polymorphic_function/polymorphic_function.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    878\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    879\u001b[0m       \u001b[0;32mwith\u001b[0m \u001b[0mOptionalXlaContext\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_jit_compile\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 880\u001b[0;31m         \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    881\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    882\u001b[0m       \u001b[0mnew_tracing_count\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexperimental_get_tracing_count\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/tensorflow/python/eager/polymorphic_function/polymorphic_function.py\u001b[0m in \u001b[0;36m_call\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    910\u001b[0m       \u001b[0;31m# In this case we have created variables on the first call, so we run the\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    911\u001b[0m       \u001b[0;31m# defunned version which is guaranteed to never create variables.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 912\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_no_variable_creation_fn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# pylint: disable=not-callable\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    913\u001b[0m     \u001b[0;32melif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_variable_creation_fn\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    914\u001b[0m       \u001b[0;31m# Release the lock early so that multiple threads can perform the call\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/tensorflow/python/eager/polymorphic_function/tracing_compiler.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m    132\u001b[0m       (concrete_function,\n\u001b[1;32m    133\u001b[0m        filtered_flat_args) = self._maybe_define_function(args, kwargs)\n\u001b[0;32m--> 134\u001b[0;31m     return concrete_function._call_flat(\n\u001b[0m\u001b[1;32m    135\u001b[0m         filtered_flat_args, captured_inputs=concrete_function.captured_inputs)  # pylint: disable=protected-access\n\u001b[1;32m    136\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/tensorflow/python/eager/polymorphic_function/monomorphic_function.py\u001b[0m in \u001b[0;36m_call_flat\u001b[0;34m(self, args, captured_inputs, cancellation_manager)\u001b[0m\n\u001b[1;32m   1743\u001b[0m         and executing_eagerly):\n\u001b[1;32m   1744\u001b[0m       \u001b[0;31m# No tape is watching; skip to running the function.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1745\u001b[0;31m       return self._build_call_outputs(self._inference_function.call(\n\u001b[0m\u001b[1;32m   1746\u001b[0m           ctx, args, cancellation_manager=cancellation_manager))\n\u001b[1;32m   1747\u001b[0m     forward_backward = self._select_forward_and_backward_functions(\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/tensorflow/python/eager/polymorphic_function/monomorphic_function.py\u001b[0m in \u001b[0;36mcall\u001b[0;34m(self, ctx, args, cancellation_manager)\u001b[0m\n\u001b[1;32m    376\u001b[0m       \u001b[0;32mwith\u001b[0m \u001b[0m_InterpolateFunctionError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    377\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mcancellation_manager\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 378\u001b[0;31m           outputs = execute.execute(\n\u001b[0m\u001b[1;32m    379\u001b[0m               \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msignature\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    380\u001b[0m               \u001b[0mnum_outputs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_num_outputs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/tensorflow/python/eager/execute.py\u001b[0m in \u001b[0;36mquick_execute\u001b[0;34m(op_name, num_outputs, inputs, attrs, ctx, name)\u001b[0m\n\u001b[1;32m     50\u001b[0m   \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     51\u001b[0m     \u001b[0mctx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mensure_initialized\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 52\u001b[0;31m     tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,\n\u001b[0m\u001b[1;32m     53\u001b[0m                                         inputs, attrs, num_outputs)\n\u001b[1;32m     54\u001b[0m   \u001b[0;32mexcept\u001b[0m \u001b[0mcore\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_NotOkStatusException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}],"source":["call_backs_InceptionV3 = Callbacks(\"InceptionV3_Elbow_FD\") \n","\n","Model_InceptionV3.fit(\n","    x = train_ds,\n","    epochs = 20,\n","    validation_data = val_ds,\n","    validation_freq = 1,\n","    callbacks = call_backs_InceptionV3\n",")"]},{"cell_type":"code","source":["Path = \"/gdrive/MyDrive/BoneFractureWork/Saved_models/InceptionV3_Elbow_3/2023_01_21-20_21_57.h5\"\n","Model_InceptionV3 = load_model(Path)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":345},"id":"QRn4X7OMdcEy","executionInfo":{"status":"error","timestamp":1677024917402,"user_tz":-360,"elapsed":1941,"user":{"displayName":"Neloy.","userId":"12580598278832678789"}},"outputId":"ef705023-5909-428e-aef8-e0b86061860e"},"execution_count":null,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-47-67949be536a6>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mPath\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"/gdrive/MyDrive/BoneFractureWork/Saved_models/InceptionV3_Elbow_3/2023_01_21-20_21_57.h5\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mModel_InceptionV3\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mload_model\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mPath\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-31-f8c4cb92936e>\u001b[0m in \u001b[0;36mload_model\u001b[0;34m(FilePath)\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mload_model\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mFilePath\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m   model = tf.keras.models.load_model(\n\u001b[0m\u001b[1;32m      4\u001b[0m       \u001b[0mfilepath\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mFilePath\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m   )\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/keras/utils/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     68\u001b[0m             \u001b[0;31m# To get the full stack trace, call:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     69\u001b[0m             \u001b[0;31m# `tf.debugging.disable_traceback_filtering()`\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 70\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwith_traceback\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfiltered_tb\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     71\u001b[0m         \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     72\u001b[0m             \u001b[0;32mdel\u001b[0m \u001b[0mfiltered_tb\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/keras/saving/legacy/serialization.py\u001b[0m in \u001b[0;36mclass_and_config_for_serialized_keras_object\u001b[0;34m(config, module_objects, custom_objects, printable_module_name)\u001b[0m\n\u001b[1;32m    383\u001b[0m     )\n\u001b[1;32m    384\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mcls\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 385\u001b[0;31m         raise ValueError(\n\u001b[0m\u001b[1;32m    386\u001b[0m             \u001b[0;34mf\"Unknown {printable_module_name}: '{class_name}'. \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    387\u001b[0m             \u001b[0;34m\"Please ensure you are using a `keras.utils.custom_object_scope` \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: Unknown layer: 'UnitNormLayer'. Please ensure you are using a `keras.utils.custom_object_scope` and that this object is included in the scope. See https://www.tensorflow.org/guide/keras/save_and_serialize#registering_the_custom_object for details."]}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-PGpHXizWNYJ","colab":{"base_uri":"https://localhost:8080/","height":328},"executionInfo":{"status":"error","timestamp":1677024871898,"user_tz":-360,"elapsed":158939,"user":{"displayName":"Neloy.","userId":"12580598278832678789"}},"outputId":"0605658d-0a8c-44b2-ba69-0d71e679cf87"},"outputs":[{"output_type":"stream","name":"stdout","text":[" 6/54 [==>...........................] - ETA: 17:57"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-44-7ee3579bd416>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mPredictions\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mModel_InceptionV3\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtest_ds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/keras/utils/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     63\u001b[0m         \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     64\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 65\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     66\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     67\u001b[0m             \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_process_traceback_frames\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__traceback__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/keras/engine/training.py\u001b[0m in \u001b[0;36mpredict\u001b[0;34m(self, x, batch_size, verbose, steps, callbacks, max_queue_size, workers, use_multiprocessing)\u001b[0m\n\u001b[1;32m   2348\u001b[0m                     \u001b[0;32mfor\u001b[0m \u001b[0mstep\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mdata_handler\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msteps\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2349\u001b[0m                         \u001b[0mcallbacks\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mon_predict_batch_begin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstep\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2350\u001b[0;31m                         \u001b[0mtmp_batch_outputs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict_function\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0miterator\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2351\u001b[0m                         \u001b[0;32mif\u001b[0m \u001b[0mdata_handler\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshould_sync\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2352\u001b[0m                             \u001b[0mcontext\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0masync_wait\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/tensorflow/python/util/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    148\u001b[0m     \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    149\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 150\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mfn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    151\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    152\u001b[0m       \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_process_traceback_frames\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__traceback__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/tensorflow/python/eager/polymorphic_function/polymorphic_function.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    878\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    879\u001b[0m       \u001b[0;32mwith\u001b[0m \u001b[0mOptionalXlaContext\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_jit_compile\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 880\u001b[0;31m         \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    881\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    882\u001b[0m       \u001b[0mnew_tracing_count\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexperimental_get_tracing_count\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/tensorflow/python/eager/polymorphic_function/polymorphic_function.py\u001b[0m in \u001b[0;36m_call\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    917\u001b[0m       \u001b[0;31m# In this case we have not created variables on the first call. So we can\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    918\u001b[0m       \u001b[0;31m# run the first trace but we should fail if variables are created.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 919\u001b[0;31m       \u001b[0mresults\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_variable_creation_fn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    920\u001b[0m       \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_created_variables\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mALLOW_DYNAMIC_VARIABLE_CREATION\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    921\u001b[0m         raise ValueError(\"Creating variables on a non-first call to a function\"\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/tensorflow/python/eager/polymorphic_function/tracing_compiler.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m    132\u001b[0m       (concrete_function,\n\u001b[1;32m    133\u001b[0m        filtered_flat_args) = self._maybe_define_function(args, kwargs)\n\u001b[0;32m--> 134\u001b[0;31m     return concrete_function._call_flat(\n\u001b[0m\u001b[1;32m    135\u001b[0m         filtered_flat_args, captured_inputs=concrete_function.captured_inputs)  # pylint: disable=protected-access\n\u001b[1;32m    136\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/tensorflow/python/eager/polymorphic_function/monomorphic_function.py\u001b[0m in \u001b[0;36m_call_flat\u001b[0;34m(self, args, captured_inputs, cancellation_manager)\u001b[0m\n\u001b[1;32m   1743\u001b[0m         and executing_eagerly):\n\u001b[1;32m   1744\u001b[0m       \u001b[0;31m# No tape is watching; skip to running the function.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1745\u001b[0;31m       return self._build_call_outputs(self._inference_function.call(\n\u001b[0m\u001b[1;32m   1746\u001b[0m           ctx, args, cancellation_manager=cancellation_manager))\n\u001b[1;32m   1747\u001b[0m     forward_backward = self._select_forward_and_backward_functions(\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/tensorflow/python/eager/polymorphic_function/monomorphic_function.py\u001b[0m in \u001b[0;36mcall\u001b[0;34m(self, ctx, args, cancellation_manager)\u001b[0m\n\u001b[1;32m    376\u001b[0m       \u001b[0;32mwith\u001b[0m \u001b[0m_InterpolateFunctionError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    377\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mcancellation_manager\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 378\u001b[0;31m           outputs = execute.execute(\n\u001b[0m\u001b[1;32m    379\u001b[0m               \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msignature\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    380\u001b[0m               \u001b[0mnum_outputs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_num_outputs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/tensorflow/python/eager/execute.py\u001b[0m in \u001b[0;36mquick_execute\u001b[0;34m(op_name, num_outputs, inputs, attrs, ctx, name)\u001b[0m\n\u001b[1;32m     50\u001b[0m   \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     51\u001b[0m     \u001b[0mctx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mensure_initialized\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 52\u001b[0;31m     tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,\n\u001b[0m\u001b[1;32m     53\u001b[0m                                         inputs, attrs, num_outputs)\n\u001b[1;32m     54\u001b[0m   \u001b[0;32mexcept\u001b[0m \u001b[0mcore\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_NotOkStatusException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}],"source":["Predictions = Model_InceptionV3.predict(test_ds)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4vDoeO1ty1wN"},"outputs":[],"source":["def get_labels(predictions):\n","  Y_pred = []\n","  Y_true = []\n","  for i in range(len(predictions)):\n","    Y_pred.append(Unique_labels[predictions[i].argmax()])\n","    Y_true.append(Unique_labels[Y_test[i].argmax()])\n","  return Y_pred, Y_true"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"N2oWBIXvy9Vl"},"outputs":[],"source":["Y_pred, Y_true = get_labels(Predictions)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"0xhve-mUgbAl"},"outputs":[],"source":["Y_pred"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZPMNncI6hCwk"},"outputs":[],"source":["Y_test"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"TUi_0LpKZmhK"},"outputs":[],"source":["# save_model(Model_InceptionV3, \"InceptionV3_Forearm_FD\")"]},{"cell_type":"markdown","metadata":{"id":"1sOoUWllzxN6"},"source":["## **`Model evaluation`**"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1674335066989,"user":{"displayName":"Neloy.","userId":"12580598278832678789"},"user_tz":-360},"id":"3CZ14a9F1NnC","outputId":"991421ef-ec08-4276-e754-3cdc247639d5"},"outputs":[{"name":"stdout","output_type":"stream","text":["\n","InceptionV3_Elbow Model's Accuracy: 61.14%\n","\n","                     Fractured Elbow  Non-Fractured Elbow\n","Fractured Elbow                   42                  146\n","Non-Fractured Elbow                4                  194\n","\n","InceptionV3_Elbow's Model's classification report: \n","\n","              precision    recall  f1-score   support\n","\n","           0       0.91      0.22      0.36       188\n","           1       0.57      0.98      0.72       198\n","\n","    accuracy                           0.61       386\n","   macro avg       0.74      0.60      0.54       386\n","weighted avg       0.74      0.61      0.54       386\n","\n"]}],"source":["Model_Evaluation( Y_true = Y_true, Y_pred = Y_pred, Labels = Unique_labels, suffix = \"InceptionV3\")"]},{"cell_type":"code","source":["for i in range(len(Y_pred)):\n","  if Y_pred[i] != Y_true[i]:\n","    print(f\"{i}\")\n","    # print(f\"{X_test[i]}\")\n","    # plt.imshow(preprocess_image(X_test[18]))\n","    # print(\"\\n\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":235},"id":"JtsZIvR_c_BS","executionInfo":{"status":"error","timestamp":1677024567084,"user_tz":-360,"elapsed":626,"user":{"displayName":"Neloy.","userId":"12580598278832678789"}},"outputId":"ecc4ae2d-9c2d-420b-f0fd-25474274d5fe"},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-42-001791ad8d2c>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mY_pred\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m   \u001b[0;32mif\u001b[0m \u001b[0mY_pred\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0mY_true\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m     \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"{i}\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m     \u001b[0;31m# print(f\"{X_test[i]}\")\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m     \u001b[0;31m# plt.imshow(preprocess_image(X_test[18]))\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'Y_pred' is not defined"]}]},{"cell_type":"code","source":[],"metadata":{"id":"_j6KVDlfc_EK"},"execution_count":null,"outputs":[]}],"metadata":{"accelerator":"GPU","colab":{"provenance":[{"file_id":"1xFvwqrtGohsAhQuwG0_3wxS6u7Q-kTKd","timestamp":1673037250391}]},"gpuClass":"standard","kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}